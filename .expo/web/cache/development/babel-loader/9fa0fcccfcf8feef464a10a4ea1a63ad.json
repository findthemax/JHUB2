{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/maxwhite/WebstormProjects/ReactExpo/screens/AddEditExpense.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport moment from 'moment';\nimport DatePickerModal from \"../components/DatePickerModal\";\nimport ImagePicker from \"../components/ImagePicker\";\nimport Colors from \"../constants/Colors\";\nimport { useDispatch } from \"react-redux\";\nimport { addExpense } from \"../store/expenses-actions\";\nimport InputText from \"../components/InputText\";\n\nfunction reducer(state, action) {\n  var updatedValues;\n  var updateTouched;\n\n  switch (action.type) {\n    case 'setText':\n      updatedValues = _objectSpread(_objectSpread({}, state.values), {}, _defineProperty({}, action.param, action.value));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        values: updatedValues\n      });\n\n    case 'setErrors':\n      updatedValues = state.errors.filter(function (error) {\n        return error.param !== action.param;\n      });\n      updatedValues = [].concat(_toConsumableArray(updatedValues), _toConsumableArray(action.errors));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errors: updatedValues\n      });\n\n    case 'setDate':\n      var updatedState = _objectSpread(_objectSpread({}, state.values), {}, {\n        date: action.value\n      });\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        values: updatedState,\n        datePick: action.android ? false : state.datePick\n      });\n\n    case 'addImg':\n      updatedValues = _objectSpread(_objectSpread({}, state.values), {}, {\n        image: action.value\n      });\n      updateTouched = _objectSpread(_objectSpread({}, state.touched), {}, {\n        image: true\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        values: updatedValues,\n        touched: updateTouched\n      });\n\n    case 'openDatePick':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        datePick: true\n      });\n\n    case 'closeDatePick':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        datePick: false\n      });\n\n    case 'setTouched':\n      updatedValues = _objectSpread(_objectSpread({}, state.touched), {}, _defineProperty({}, action.param, true));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        touched: updatedValues\n      });\n  }\n}\n\nvar AddEditExpenses = function AddEditExpenses(_ref) {\n  var navigation = _ref.navigation;\n  var editExpense = false;\n\n  var _useReducer = useReducer(reducer, {\n    values: {\n      supplier: editExpense ? editExpense.supplier : '',\n      amount: editExpense ? editExpense.amount : '',\n      date: editExpense ? editExpense.date : new Date(),\n      image: editExpense ? editExpense.image : null\n    },\n    touched: {\n      supplier: false,\n      amount: false,\n      image: false\n    },\n    datePick: false,\n    errors: [{\n      param: 'amount',\n      msg: 'Please this is an error'\n    }]\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var reduxDispatch = useDispatch();\n\n  var addExpenseHandler = function addExpenseHandler(_ref2) {\n    var supplier = _ref2.supplier,\n        amount = _ref2.amount,\n        date = _ref2.date,\n        image = _ref2.image;\n    var notTouched = Object.keys(state.touched).filter(function (item) {\n      return state.touched[item] === false && item;\n    });\n\n    if (notTouched.length > 0) {\n      notTouched.forEach(function (param) {\n        var msg = param === 'image' ? \"Please upload an image\" : \"Please enter a value\";\n        var errors = [{\n          param: param,\n          msg: msg\n        }];\n        dispatch({\n          type: 'setErrors',\n          param: param,\n          errors: errors\n        });\n        dispatch({\n          type: 'setTouched',\n          param: param\n        });\n      });\n    } else {\n      var success = reduxDispatch(addExpense(supplier, amount, date, image));\n\n      if (success) {\n        navigation.goBack();\n      }\n    }\n  };\n\n  console.log(\"Date picker state: \", state.datePick);\n\n  var imageTakenHandler = function imageTakenHandler(imagePath) {\n    dispatch({\n      type: 'setErrors',\n      param: 'image',\n      errors: []\n    });\n    dispatch({\n      type: 'addImg',\n      value: imagePath\n    });\n  };\n\n  var valueUpdateHandler = function valueUpdateHandler(text, param, errorArray) {\n    dispatch({\n      type: 'setTouched',\n      param: param\n    });\n    dispatch({\n      type: 'setText',\n      value: text,\n      param: param\n    });\n    dispatch({\n      type: 'setErrors',\n      param: param,\n      errors: errorArray\n    });\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: {\n      width: '100%',\n      flex: 1,\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, Platform.OS === 'ios' && React.createElement(DatePickerModal, {\n    visibility: state.datePick,\n    dispatch: dispatch,\n    date: state.values.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 39\n    }\n  }), React.createElement(View, {\n    style: styles.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, React.createElement(InputText, {\n    title: \"Supplier Name\",\n    value: state.values.supplier,\n    param: \"supplier\",\n    spellcheck: false,\n    valueUpdate: valueUpdateHandler,\n    errors: state.errors.filter(function (error) {\n      return error.param === 'supplier';\n    }),\n    touched: state.touched.supplier,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), React.createElement(InputText, {\n    title: \"Receipt Amount\",\n    value: state.values.amount,\n    param: \"amount\",\n    valueUpdate: valueUpdateHandler,\n    errors: state.errors.filter(function (error) {\n      return error.param === 'amount';\n    }),\n    keyboardType: \"decimal-pad\",\n    currency: true,\n    touched: state.touched.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.formInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.inputTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"Date of Receipt\"), React.createElement(View, {\n    style: styles.datePick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, moment(state.values.date).format('Do MMMM YYYY')), React.createElement(TouchableOpacity, {\n    style: styles.changeBtn,\n    onPress: function onPress() {\n      return dispatch({\n        type: 'openDatePick'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.changeBtnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, \"Change\")))), Platform.OS === 'android' && state.datePick && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: state.values.date,\n    mode: \"date\",\n    display: \"calendar\",\n    onChange: function onChange(e, newDate) {\n      e.type === 'set' ? dispatch({\n        type: 'setDate',\n        value: newDate,\n        android: true\n      }) : dispatch({\n        type: 'closeDatePick'\n      });\n    },\n    maximumDate: new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 65\n    }\n  }), React.createElement(ImagePicker, {\n    onImageTaken: imageTakenHandler,\n    errors: state.errors.filter(function (error) {\n      return error.param === 'image';\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.submitBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Add Expense\",\n    onPress: function onPress() {\n      return addExpenseHandler(state.values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  form: {\n    marginTop: 20,\n    marginBottom: 20,\n    width: '100%',\n    flex: 1,\n    alignItems: 'center'\n  },\n  datePick: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  submitBtn: {\n    marginTop: 20\n  },\n  changeBtn: {\n    backgroundColor: Colors.orange,\n    paddingTop: 5,\n    paddingBottom: 5,\n    paddingLeft: 20,\n    paddingRight: 20,\n    borderRadius: 5,\n    shadowColor: 'black',\n    shadowOpacity: .3,\n    shadowRadius: 3,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    }\n  },\n  inputTitle: {\n    color: Colors.orange,\n    fontSize: 15,\n    width: '100%',\n    textAlign: 'left'\n  },\n  formInput: {\n    width: '90%',\n    marginBottom: 15,\n    alignItems: 'center'\n  }\n});\nexport default AddEditExpenses;","map":{"version":3,"sources":["/Users/maxwhite/WebstormProjects/ReactExpo/screens/AddEditExpense.js"],"names":["React","useState","useReducer","DateTimePicker","moment","DatePickerModal","ImagePicker","Colors","useDispatch","addExpense","InputText","reducer","state","action","updatedValues","updateTouched","type","values","param","value","errors","filter","error","updatedState","date","datePick","android","image","touched","AddEditExpenses","navigation","editExpense","supplier","amount","Date","msg","dispatch","reduxDispatch","addExpenseHandler","notTouched","Object","keys","item","length","forEach","success","goBack","console","log","imageTakenHandler","imagePath","valueUpdateHandler","text","errorArray","width","flex","alignItems","Platform","OS","styles","form","formInput","inputTitle","format","changeBtn","changeBtnText","e","newDate","submitBtn","StyleSheet","create","marginTop","marginBottom","flexDirection","justifyContent","backgroundColor","orange","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius","shadowColor","shadowOpacity","shadowRadius","shadowOffset","height","color","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useReducer} from 'react';\nimport {View, Text, Button, Alert, TextInput, ScrollView, StyleSheet, Platform, TouchableOpacity} from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport moment from 'moment'\nimport DatePickerModal from \"../components/DatePickerModal\";\nimport ImagePicker from \"../components/ImagePicker\";\nimport Colors from \"../constants/Colors\";\nimport { useDispatch } from \"react-redux\";\nimport { addExpense } from '../store/expenses-actions'\nimport InputText from '../components/InputText'\n\n\nfunction reducer(state, action) {\n    let updatedValues;\n    let updateTouched;\n    switch (action.type) {\n        case 'setText':\n            updatedValues = {\n                ...state.values,\n                [action.param]: action.value\n            }\n            return {\n                ...state,\n                values: updatedValues\n            }\n        case 'setErrors':\n            updatedValues = state.errors.filter(error => error.param !== action.param)\n            updatedValues = [...updatedValues, ...action.errors]\n            return {\n                ...state,\n                errors: updatedValues\n            }\n        case 'setDate':\n            const updatedState = {\n                ...state.values,\n                date: action.value\n            }\n            return {\n                ...state,\n                values: updatedState,\n                datePick: action.android ? false : state.datePick,\n            }\n        case 'addImg':\n            updatedValues = {\n                ...state.values,\n                image: action.value\n            }\n            updateTouched = {\n                ...state.touched,\n                image: true,\n            }\n            return {\n                ...state,\n                values: updatedValues,\n                touched: updateTouched\n            }\n        case 'openDatePick':\n            return {\n                ...state,\n                datePick: true\n            }\n        case 'closeDatePick':\n            return {\n                ...state,\n                datePick: false\n            }\n        case 'setTouched':\n            updatedValues = {\n                ...state.touched,\n                [action.param]: true\n            }\n            return {\n                ...state,\n                touched: updatedValues\n            }\n    }\n}\n\nconst AddEditExpenses = ({ navigation }) => {\n\n    const editExpense = false\n\n    const [state, dispatch] = useReducer(reducer, {\n        values: {\n            supplier: editExpense ? editExpense.supplier : '',\n            amount: editExpense ? editExpense.amount : '',\n            date: editExpense ? editExpense.date : new Date(),\n            image: editExpense ? editExpense.image : null,\n        },\n        touched: {\n            supplier: false,\n            amount: false,\n            image: false,\n        },\n        datePick: false,\n        errors: [{\n            param: 'amount',\n            msg: 'Please this is an error'\n        }]\n    });\n\n    const reduxDispatch = useDispatch()\n\n    const addExpenseHandler = ({ supplier, amount, date, image }) => {\n\n        const notTouched = Object.keys(state.touched).filter(item => state.touched[item] === false && item)\n\n        if(notTouched.length > 0) {\n            notTouched.forEach(param => {\n                const msg = param === 'image' ? \"Please upload an image\" : \"Please enter a value\"\n                const errors = [\n                    {param, msg}\n                ]\n                dispatch({type: 'setErrors', param, errors})\n                dispatch({type: 'setTouched', param})\n            })\n        } else {\n            const success = reduxDispatch(addExpense(supplier, amount, date, image))\n            if(success) {\n                navigation.goBack()\n            }\n        }\n    }\n\n    console.log(\"Date picker state: \", state.datePick);\n\n    const imageTakenHandler = imagePath => {\n        dispatch({type: 'setErrors', param: 'image', errors: []})\n        dispatch({type: 'addImg', value: imagePath})\n    }\n\n    const valueUpdateHandler = (text, param, errorArray) => {\n        dispatch({type: 'setTouched', param})\n        dispatch({type: 'setText', value: text, param})\n        dispatch({type: 'setErrors', param, errors: errorArray})\n    }\n\n    return (\n        <ScrollView contentContainerStyle={{ width: '100%', flex: 1, alignItems: 'center' }}>\n            {Platform.OS === 'ios' && <DatePickerModal visibility={state.datePick} dispatch={dispatch} date={state.values.date}/>}\n            <View style={styles.form}>\n                <InputText\n                    title=\"Supplier Name\"\n                    value={state.values.supplier}\n                    param=\"supplier\"\n                    spellcheck={false}\n                    valueUpdate={valueUpdateHandler}\n                    errors={state.errors.filter(error => error.param === 'supplier')}\n                    touched={state.touched.supplier}\n                />\n                <InputText\n                    title=\"Receipt Amount\"\n                    value={state.values.amount}\n                    param=\"amount\"\n                    valueUpdate={valueUpdateHandler}\n                    errors={state.errors.filter(error => error.param === 'amount')}\n                    keyboardType=\"decimal-pad\"\n                    currency\n                    touched={state.touched.amount}\n\n                />\n                <View style={styles.formInput}>\n                    <Text style={styles.inputTitle}>Date of Receipt</Text>\n                    <View style={styles.datePick}>\n                        <Text>{moment(state.values.date).format('Do MMMM YYYY')}</Text>\n                        <TouchableOpacity style={styles.changeBtn} onPress={() => dispatch({type: 'openDatePick'})}>\n                            <Text style={styles.changeBtnText}>Change</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n                {Platform.OS === 'android' && state.datePick && <DateTimePicker\n                    testID=\"dateTimePicker\"\n                    value={state.values.date}\n                    mode='date'\n                    display=\"calendar\"\n                    onChange={(e, newDate) => {\n                        e.type === 'set' ? dispatch({type: 'setDate', value: newDate, android: true}) : dispatch({type: 'closeDatePick'})\n                    }}\n                    maximumDate={new Date()}\n                />}\n                <ImagePicker onImageTaken={imageTakenHandler} errors={state.errors.filter(error => error.param === 'image')}/>\n                <View style={styles.submitBtn}>\n                    <Button title=\"Add Expense\" onPress={() => addExpenseHandler(state.values)}/>\n                </View>\n            </View>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    form: {\n        marginTop: 20,\n        marginBottom: 20,\n        width: '100%',\n        flex: 1,\n        alignItems: 'center'\n    },\n    datePick: {\n        width: '100%',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    submitBtn: {\n        marginTop: 20,\n    },\n    changeBtn: {\n        backgroundColor: Colors.orange,\n        paddingTop: 5,\n        paddingBottom: 5,\n        paddingLeft: 20,\n        paddingRight: 20,\n        borderRadius: 5,\n        shadowColor: 'black',\n        shadowOpacity: .3,\n        shadowRadius: 3,\n        shadowOffset: {\n            width: 0,\n            height: 0\n        }\n    },\n    inputTitle: {\n        color: Colors.orange,\n        fontSize: 15,\n        width: '100%',\n        textAlign: 'left'\n    },\n    formInput: {\n        width: '90%',\n        marginBottom: 15,\n        alignItems: 'center'\n    },\n});\n\nexport default AddEditExpenses;"]},"metadata":{},"sourceType":"module"}