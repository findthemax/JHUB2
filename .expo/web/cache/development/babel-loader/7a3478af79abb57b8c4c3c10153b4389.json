{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/maxwhite/WebstormProjects/ReactExpo/components/ExpenseItem.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { useDispatch } from \"react-redux\";\nimport { deleteExpense } from \"../store/expenses-actions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Colors from \"../constants/Colors\";\n\nvar ExpenseItem = function ExpenseItem(_ref) {\n  var id = _ref.id,\n      supplier = _ref.supplier,\n      date = _ref.date,\n      amount = _ref.amount,\n      image = _ref.image;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      viewReceipt = _useState2[0],\n      setViewReceipt = _useState2[1];\n\n  var dispatch = useDispatch();\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setViewReceipt(!viewReceipt);\n    },\n    style: styles.expenseItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.h1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, supplier), React.createElement(Text, {\n    style: styles.h2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, moment(date).format('Do MMMM YYYY')), React.createElement(Text, {\n    style: styles.h3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"\\xA3\", (parseInt(amount) / 100).toFixed(2)), React.createElement(Text, {\n    style: styles.hint,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Tap to view Receipt\")), viewReceipt && React.createElement(View, {\n    style: {\n      width: '100%',\n      height: \"100%\",\n      marginVertical: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: '100%',\n      height: 200,\n      resizeMode: 'contain'\n    },\n    source: {\n      uri: image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.delBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    color: 'red',\n    title: \"Delete\",\n    onPress: function onPress() {\n      dispatch(deleteExpense(id));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default ExpenseItem;\nvar styles = StyleSheet.create({\n  expenseItem: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: Colors.orange,\n    marginVertical: 2\n  },\n  h1: {\n    textAlign: 'center',\n    fontSize: 20\n  },\n  h2: {\n    textAlign: 'center',\n    fontSize: 12\n  },\n  h3: {\n    textAlign: 'center',\n    paddingTop: 4,\n    fontSize: 18,\n    fontWeight: '600'\n  },\n  hint: {\n    color: Colors.orange,\n    fontSize: 10,\n    fontWeight: '200',\n    textAlign: 'center'\n  },\n  delBtn: {\n    width: '50%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/maxwhite/WebstormProjects/ReactExpo/components/ExpenseItem.js"],"names":["React","useState","moment","useDispatch","deleteExpense","Colors","ExpenseItem","id","supplier","date","amount","image","viewReceipt","setViewReceipt","dispatch","styles","expenseItem","h1","h2","format","h3","parseInt","toFixed","hint","width","height","marginVertical","resizeMode","uri","delBtn","StyleSheet","create","flex","alignItems","padding","borderWidth","borderColor","orange","textAlign","fontSize","paddingTop","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport moment from 'moment'\nimport { useDispatch } from \"react-redux\";\nimport { deleteExpense } from '../store/expenses-actions'\n\nimport { View, Text, Image, StyleSheet, TouchableOpacity, Button } from \"react-native\";\n\nimport Colors from \"../constants/Colors\";\n\n\nconst ExpenseItem = ({ id, supplier, date, amount, image }) => {\n\n    const [viewReceipt, setViewReceipt] = useState(false)\n\n    const dispatch = useDispatch()\n\n    return (\n        <TouchableOpacity onPress={() => setViewReceipt(!viewReceipt)} style={styles.expenseItem}>\n            <View>\n                <Text style={styles.h1}>{supplier}</Text>\n                <Text style={styles.h2}>{moment(date).format('Do MMMM YYYY')}</Text>\n                <Text style={styles.h3}>Â£{(parseInt(amount)/100).toFixed(2)}</Text>\n                <Text style={styles.hint}>Tap to view Receipt</Text>\n            </View>\n            {viewReceipt &&\n            <View style={{width: '100%', height: \"100%\", marginVertical: 10}}>\n                <Image style={{width: '100%', height: 200, resizeMode: 'contain'}} source={{uri: image}} />\n                <View style={styles.delBtn}>\n                    <Button color={'red'} title=\"Delete\" onPress={() => {dispatch(deleteExpense(id))}} />\n                </View>\n            </View>\n\n            }\n        </TouchableOpacity>\n    )\n}\n\nexport default ExpenseItem\n\nconst styles = StyleSheet.create({\n    expenseItem: {\n        flex: 1,\n        alignItems: 'center',\n        padding: 10,\n        borderWidth: 1,\n        borderColor: Colors.orange,\n        marginVertical: 2\n    },\n    h1: {\n        textAlign: 'center',\n        fontSize: 20\n    },\n    h2: {\n        textAlign: 'center',\n        fontSize: 12\n    },\n    h3: {\n        textAlign: 'center',\n        paddingTop: 4,\n        fontSize: 18,\n        fontWeight: '600'\n    },\n    hint: {\n        color: Colors.orange,\n        fontSize: 10,\n        fontWeight: '200',\n        textAlign: 'center'\n    },\n    delBtn: {\n        width: '50%',\n        alignItems: 'center'\n    }\n})\n"]},"metadata":{},"sourceType":"module"}