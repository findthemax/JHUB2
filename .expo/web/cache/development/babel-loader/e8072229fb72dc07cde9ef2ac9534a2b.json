{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/Users/maxwhite/WebstormProjects/ReactExpo/components/InputText.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Colors from \"../constants/Colors\";\n\nvar ExpenseItem = function ExpenseItem(props) {\n  var param = props.param;\n\n  var onChangeHandler = function onChangeHandler(text) {\n    var errorArray = [];\n\n    if (props.required && text.trim().length < 1) {\n      errorArray.push({\n        param: param,\n        msg: \"Please enter a value\"\n      });\n    }\n\n    var currencyRegex = /^[0-9]\\d{0,2}(\\.\\d{0,2})?$/;\n\n    if (props.currency && !currencyRegex.test(text)) {\n      errorArray.push({\n        param: param,\n        msg: \"Something appears wrong with the amount. It must be an amount between 0.01 and 999.99\"\n      });\n    }\n\n    props.valueUpdate(text, param, errorArray);\n  };\n\n  return React.createElement(View, {\n    style: styles.formInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.inputTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, props.title), React.createElement(TextInput, _extends({\n    style: styles.textInput,\n    value: props.value,\n    placeholder: props.title,\n    onChangeText: function onChangeText(text) {\n      return onChangeHandler(text);\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  })), props.touched && props.errors.map(function (error, index) {\n    return React.createElement(Text, {\n      key: param + index,\n      style: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 67\n      }\n    }, error.msg);\n  }));\n};\n\nexport default ExpenseItem;\nvar styles = StyleSheet.create({\n  formInput: {\n    width: '90%',\n    marginBottom: 15,\n    alignItems: 'center'\n  },\n  textInput: {\n    borderBottomColor: Colors.orange,\n    borderBottomWidth: .5,\n    textAlign: 'center',\n    width: '90%',\n    padding: 10,\n    fontSize: 20\n  },\n  inputTitle: {\n    color: Colors.orange,\n    fontSize: 15,\n    width: '100%',\n    textAlign: 'left'\n  },\n  error: {\n    textAlign: 'center',\n    color: 'red',\n    marginTop: 2\n  }\n});","map":{"version":3,"sources":["/Users/maxwhite/WebstormProjects/ReactExpo/components/InputText.js"],"names":["React","useState","moment","Colors","ExpenseItem","props","param","onChangeHandler","text","errorArray","required","trim","length","push","msg","currencyRegex","currency","test","valueUpdate","styles","formInput","inputTitle","title","textInput","value","touched","errors","map","error","index","StyleSheet","create","width","marginBottom","alignItems","borderBottomColor","orange","borderBottomWidth","textAlign","padding","fontSize","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport moment from 'moment'\n\nimport {View, Text, Image, StyleSheet, TouchableOpacity, TextInput} from \"react-native\";\n\nimport Colors from \"../constants/Colors\";\n\nconst ExpenseItem = props => {\n\n    const { param } = props\n\n    const onChangeHandler = text => {\n\n        let errorArray = []\n        if(props.required && text.trim().length < 1) {\n            errorArray.push({param, msg: \"Please enter a value\"})\n        }\n        const currencyRegex = /^[0-9]\\d{0,2}(\\.\\d{0,2})?$/\n        if(props.currency && !currencyRegex.test(text)) {\n            errorArray.push({param, msg: \"Something appears wrong with the amount. It must be an amount between 0.01 and 999.99\"})\n        }\n        props.valueUpdate(text, param, errorArray)\n    }\n\n    return (\n        <View style={styles.formInput}>\n            <Text style={styles.inputTitle}>{props.title}</Text>\n            <TextInput\n                style={styles.textInput}\n                value={props.value}\n                placeholder={props.title}\n                onChangeText={text => onChangeHandler(text)}\n                {...props}\n            />\n            {props.touched &&  props.errors.map((error, index) => <Text key={param+index} style={styles.error}>{error.msg}</Text>)}\n        </View>\n    )\n}\n\nexport default ExpenseItem\n\nconst styles = StyleSheet.create({\n    formInput: {\n        width: '90%',\n        marginBottom: 15,\n        alignItems: 'center'\n    },\n    textInput: {\n        borderBottomColor: Colors.orange,\n        borderBottomWidth: .5,\n        textAlign: 'center',\n        width: '90%',\n        padding: 10,\n        fontSize: 20\n    },\n    inputTitle: {\n        color: Colors.orange,\n        fontSize: 15,\n        width: '100%',\n        textAlign: 'left'\n    },\n    error: {\n        textAlign: 'center',\n        color: 'red',\n        marginTop: 2,\n    },\n})\n"]},"metadata":{},"sourceType":"module"}