{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/maxwhite/WebstormProjects/ReactExpo/components/ImagePicker.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport Colors from \"../constants/Colors\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nvar ReceiptPicker = function ReceiptPicker(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      receipt = _useState2[0],\n      setReceipt = _useState2[1];\n\n  var verifyPermissions = function verifyPermissions() {\n    var _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function verifyPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (!(status !== 'granted')) {\n              _context.next = 7;\n              break;\n            }\n\n            Alert.alert('No Camera Access', 'You need to allow camera access in order to use this app', [{\n              text: 'Okay'\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 7:\n            return _context.abrupt(\"return\", true);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takeImageHandler = function takeImageHandler() {\n    var permission, image;\n    return _regeneratorRuntime.async(function takeImageHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(verifyPermissions());\n\n          case 2:\n            permission = _context2.sent;\n\n            if (permission) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              allowsEditing: true,\n              quality: .5\n            }));\n\n          case 7:\n            image = _context2.sent;\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(setReceipt(image.uri));\n\n          case 10:\n            props.onImageTaken(image.uri);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      alignItems: 'center',\n      margin: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.imageHolder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, !receipt ? React.createElement(Text, {\n    style: styles.placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Please upload a photo of your receipt\") : React.createElement(Image, {\n    style: {\n      width: '100%',\n      height: '100%',\n      resizeMode: 'contain'\n    },\n    source: {\n      uri: receipt\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.photoBtn,\n    onPress: function onPress() {\n      return takeImageHandler();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"add-a-photo\",\n    size: 30,\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), props.errors.map(function (error, index) {\n    return React.createElement(Text, {\n      key: \"image\" + index,\n      style: styles.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 49\n      }\n    }, error.msg);\n  }));\n};\n\nvar styles = StyleSheet.create({\n  placeholder: {\n    color: Colors.grey,\n    textAlign: 'center',\n    padding: 10\n  },\n  imageHolder: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 150,\n    width: 150,\n    borderColor: Colors.orange,\n    borderWidth: .5,\n    margin: 10\n  },\n  photoBtn: {\n    backgroundColor: Colors.orange,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 5,\n    width: 146,\n    paddingBottom: 5,\n    borderRadius: 5,\n    elevation: 5,\n    shadowColor: 'black',\n    shadowOpacity: .3,\n    shadowRadius: 3,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    }\n  },\n  error: {\n    textAlign: 'center',\n    color: 'red',\n    marginTop: 2\n  }\n});\nexport default ReceiptPicker;","map":{"version":3,"sources":["/Users/maxwhite/WebstormProjects/ReactExpo/components/ImagePicker.js"],"names":["React","useState","ImagePicker","Permissions","Colors","MaterialIcons","ReceiptPicker","props","receipt","setReceipt","verifyPermissions","askAsync","CAMERA","CAMERA_ROLL","status","Alert","alert","text","takeImageHandler","permission","launchCameraAsync","allowsEditing","quality","image","uri","onImageTaken","width","alignItems","margin","styles","imageHolder","placeholder","height","resizeMode","photoBtn","errors","map","error","index","msg","StyleSheet","create","color","grey","textAlign","padding","justifyContent","borderColor","orange","borderWidth","backgroundColor","paddingTop","paddingBottom","borderRadius","elevation","shadowColor","shadowOpacity","shadowRadius","shadowOffset","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, TouchableOpacity, Image, Text, StyleSheet, Alert } from \"react-native\";\nimport * as ImagePicker from 'expo-image-picker'\nimport * as Permissions from 'expo-permissions'\n\nimport Colors from \"../constants/Colors\";\nimport {MaterialIcons} from \"@expo/vector-icons\";\n\n\nconst ReceiptPicker = props => {\n\n    const [receipt, setReceipt] = useState()\n\n    const verifyPermissions = async () => {\n        const { status } = await Permissions.askAsync(\n            Permissions.CAMERA,\n            Permissions.CAMERA_ROLL\n        )\n        if(status !== 'granted') {\n            Alert.alert('No Camera Access', 'You need to allow camera access in order to use this app', [{text: 'Okay'}])\n            return false\n        }\n        return true\n    }\n\n    const takeImageHandler = async () => {\n\n        const permission = await verifyPermissions()\n        if(!permission) {\n            return;\n        }\n        const image = await ImagePicker.launchCameraAsync({\n            allowsEditing: true,\n            quality: .5,\n        })\n\n        await setReceipt(image.uri)\n        props.onImageTaken(image.uri)\n    }\n\n    return (\n        <View style={{width: '100%', alignItems: 'center', margin: 20}}>\n            <View style={styles.imageHolder}>\n                {!receipt ?\n                    <Text style={styles.placeholder}>Please upload a photo of your receipt</Text>\n                    :\n                    <Image style={{width: '100%', height: '100%', resizeMode: 'contain'}} source={{uri: receipt}}/>\n                }\n            </View>\n            <TouchableOpacity style={styles.photoBtn} onPress={() => takeImageHandler()}>\n                <MaterialIcons name=\"add-a-photo\" size={30} color=\"black\" />\n            </TouchableOpacity>\n            {props.errors.map((error, index) => <Text key={\"image\"+index} style={styles.error}>{error.msg}</Text>)}\n\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    placeholder: {\n        color: Colors.grey,\n        textAlign: 'center',\n        padding: 10\n    },\n    imageHolder: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 150,\n        width: 150,\n        borderColor: Colors.orange,\n        borderWidth: .5,\n        margin: 10,\n    },\n    photoBtn: {\n        backgroundColor: Colors.orange,\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingTop: 5,\n        width: 146,\n        paddingBottom: 5,\n        borderRadius: 5,\n        elevation: 5,\n        shadowColor: 'black',\n        shadowOpacity: .3,\n        shadowRadius: 3,\n        shadowOffset: {\n            width: 0,\n            height: 0\n        }\n    },\n    error: {\n        textAlign: 'center',\n        color: 'red',\n        marginTop: 2,\n    },\n})\n\nexport default ReceiptPicker"]},"metadata":{},"sourceType":"module"}