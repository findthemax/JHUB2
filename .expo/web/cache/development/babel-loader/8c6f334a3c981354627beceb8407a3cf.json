{"ast":null,"code":"import { ADD_EXPENSE, GET_EXPENSES } from \"./expenses-actions\";\nimport Expense from \"../models/expense\";\nvar initialState = {\n  expenses: []\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_EXPENSE:\n      var newExpense = new Expense(action.id, action.supplier, action.amount, action.date, action.image);\n      return {\n        expenses: state.expenses.concat(newExpense)\n      };\n\n    case GET_EXPENSES:\n      return {\n        expenses: action.expenses.map(function (ex) {\n          return new Expense(ex.id, ex.supplier, ex.amount, ex.date, ex.image);\n        })\n      };\n\n    default:\n      return state;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["/Users/maxwhite/WebstormProjects/ReactExpo/store/expenses-reducer.js"],"names":["ADD_EXPENSE","GET_EXPENSES","Expense","initialState","expenses","state","action","type","newExpense","id","supplier","amount","date","image","concat","map","ex"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB;AACA,OAAOC,OAAP;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAL;AACI,UAAMQ,UAAU,GAAG,IAAIN,OAAJ,CAAYI,MAAM,CAACG,EAAnB,EAAuBH,MAAM,CAACI,QAA9B,EAAwCJ,MAAM,CAACK,MAA/C,EAAuDL,MAAM,CAACM,IAA9D,EAAoEN,MAAM,CAACO,KAA3E,CAAnB;AACA,aAAO;AACHT,QAAAA,QAAQ,EAAEC,KAAK,CAACD,QAAN,CAAeU,MAAf,CAAsBN,UAAtB;AADP,OAAP;;AAGJ,SAAKP,YAAL;AACI,aAAO;AACHG,QAAAA,QAAQ,EAAEE,MAAM,CAACF,QAAP,CAAgBW,GAAhB,CAAoB,UAAAC,EAAE;AAAA,iBAAI,IAAId,OAAJ,CAAYc,EAAE,CAACP,EAAf,EAAmBO,EAAE,CAACN,QAAtB,EAAgCM,EAAE,CAACL,MAAnC,EAA2CK,EAAE,CAACJ,IAA9C,EAAoDI,EAAE,CAACH,KAAvD,CAAJ;AAAA,SAAtB;AADP,OAAP;;AAGJ;AACI,aAAOR,KAAP;AAXR;;AAaA,SAAOA,KAAP;AACH,CAfD","sourcesContent":["import { ADD_EXPENSE, GET_EXPENSES } from \"./expenses-actions\";\nimport Expense from '../models/expense'\n\nconst initialState = {\n    expenses: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_EXPENSE:\n            const newExpense = new Expense(action.id, action.supplier, action.amount, action.date, action.image)\n            return {\n                expenses: state.expenses.concat(newExpense)\n            }\n        case GET_EXPENSES:\n            return {\n                expenses: action.expenses.map(ex => new Expense(ex.id, ex.supplier, ex.amount, ex.date, ex.image))\n            }\n        default:\n            return state\n    }\n    return state;\n}"]},"metadata":{},"sourceType":"module"}